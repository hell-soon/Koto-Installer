#!/bin/bash

# ======================================================================
echo -e "\n\033[1;36m
  /\_/\
 ( o.o )
  > ^ <

  –ü—Ä–∏–≤–µ—Ç! –Ø –∫–æ—Ç–∏–∫-–∏–Ω—Å—Ç–∞–ª–ª—è—Ç–æ—Ä HyprlandUtil!
  –°–µ–π—á–∞—Å –≤—Å—ë –Ω–∞—Å—Ç—Ä–æ–∏–º =^..^=
\033[0m"
# ======================================================================

set -e

LOG_FILE="$HOME/hyprland_installer_$(date +%Y%m%d_%H%M%S).log"
exec 3>&1 1>"$LOG_FILE" 2>&1
trap 'echo "–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –ü–æ–ª–Ω—ã–π –ª–æ–≥: $LOG_FILE" >&3' EXIT

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

log() {
    local message="$1"
    local timestamp=$(date "+%Y-%m-%d %H:%M:%S")
    echo -e "${timestamp} - ${message}" | tee /dev/fd/3
}

TOTAL_STEPS=6
CURRENT_STEP=0
BAR_WIDTH=50

show_progress() {
    CURRENT_STEP=$((CURRENT_STEP + 1))
    PERCENT=$((CURRENT_STEP * 100 / TOTAL_STEPS))
    FILL=$((CURRENT_STEP * BAR_WIDTH / TOTAL_STEPS))
    EMPTY=$((BAR_WIDTH - FILL))

    printf "\r${BLUE}–ü—Ä–æ–≥—Ä–µ—Å—Å: ["
    printf "%${FILL}s" | tr ' ' '='
    printf "%${EMPTY}s" | tr ' ' ' '
    printf "] %d%%${NC}" $PERCENT >&3
}

clear_status() {
    printf "\r%${COLUMNS}s\r" >&3
}

is_installed() {
    if pacman -Qi "$1" &>/dev/null || yay -Qi "$1" &>/dev/null; then
        return 0
    else
        return 1
    fi
}

check_yay() {
    clear_status
    log "${YELLOW}üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ yay...${NC}"

    if ! command -v yay &> /dev/null; then
        log "${RED}‚ùå yay –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ –≤—Ä—É—á–Ω—É—é:${NC}"
        log "git clone https://aur.archlinux.org/yay-bin.git /tmp/yay-bin && cd /tmp/yay-bin && makepkg -si --noconfirm"
        exit 1
    fi
    show_progress
    log "${GREEN}‚úÖ yay —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.${NC}"
}

install_packages() {
    clear_status
    local packages=(
        zen-browser
        telegram-desktop
        spotify-launcher
        ttf-maplemono
        nodejs
    )
    local editor_pkg=""

    log "${YELLOW}ü§î –í—ã–±–æ—Ä —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –∫–æ–¥–∞...${NC}"
    echo -e "\n${YELLOW}–ö–∞–∫–æ–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –∫–æ–¥–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å?${NC}" >&3
    echo "  1) Visual Studio Code (—Å—Ç–∞–±–∏–ª—å–Ω—ã–π –∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã–π)" >&3
    echo "  2) Zed Editor (–±—ã—Å—Ç—Ä—ã–π, –Ω–∞–ø–∏—Å–∞–Ω –Ω–∞ Rust)" >&3

    local editor_choice
    while [[ "$editor_choice" != "1" && "$editor_choice" != "2" ]]; do
        read -r -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1 –∏–ª–∏ 2) –∏ –Ω–∞–∂–º–∏—Ç–µ Enter: " editor_choice < /dev/tty

        case "$editor_choice" in
            1)
                editor_pkg="visual-studio-code-bin"
                log "   –í—ã–±—Ä–∞–Ω —Ä–µ–¥–∞–∫—Ç–æ—Ä: Visual Studio Code ($editor_pkg)"
                ;;
            2)
                editor_pkg="zed-editor"
                log "   –í—ã–±—Ä–∞–Ω —Ä–µ–¥–∞–∫—Ç–æ—Ä: Zed Editor ($editor_pkg)"
                ;;
            *)
                echo -e "${RED}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ 1 –∏–ª–∏ 2.${NC}" >&3
                editor_choice=""
                ;;
        esac
    done

    packages+=("$editor_pkg")

    log "${YELLOW}üì¶ –ù–∞—á–∏–Ω–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤...${NC}"

    for pkg in "${packages[@]}"; do
        if is_installed "$pkg"; then
            log "${GREEN}   ‚úì $pkg —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
        else
            log "${YELLOW}   ‚Üì –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º $pkg...${NC}"
            if ! yay -S --needed --noconfirm "$pkg"; then
                log "${RED}   ‚úó –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ $pkg${NC}"
                continue
            fi
            log "${GREEN}   ‚úì $pkg —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
        fi
    done

    show_progress
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ nvm –∏ Node.js —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π
install_nvm() {
    clear_status
    log "${YELLOW}üîÑ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º nvm –∏ Node.js...${NC}"

    export NVM_DIR="$HOME/.nvm" # –û–ø—Ä–µ–¥–µ–ª—è–µ–º NVM_DIR

    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é NVM_DIR, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    # –≠—Ç–æ –¥–æ–ª–∂–Ω–æ —Ä–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É "directory does not exist" –∏–∑ –ª–æ–≥–∞ nvm install.sh
    if [ ! -d "$NVM_DIR" ]; then
        log "${YELLOW}   –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è nvm: $NVM_DIR${NC}"
        if ! mkdir -p "$NVM_DIR"; then
            log "${RED}   ‚úó –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é $NVM_DIR${NC}"
            exit 1
        fi
    fi

    # –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—å nvm, –µ—Å–ª–∏ –æ–Ω —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–æ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω –≤ —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏
    if [ -s "$NVM_DIR/nvm.sh" ]; then
        . "$NVM_DIR/nvm.sh" # –ó–∞–≥—Ä—É–∂–∞–µ–º nvm
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ nvm –ü–û–°–õ–ï –ø–æ–ø—ã—Ç–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏
    if ! command -v nvm &> /dev/null; then
        log "${YELLOW}   ‚Üì nvm –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º nvm...${NC}"

        LATEST_NVM_TAG=$(curl -s "https://api.github.com/repos/nvm-sh/nvm/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')

        if [ -z "$LATEST_NVM_TAG" ]; then
            log "${YELLOW}   ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—Ä—Å–∏—é nvm, –∏—Å–ø–æ–ª—å–∑—É–µ–º v0.39.7 –∫–∞–∫ –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç.${NC}"
            LATEST_NVM_TAG="v0.39.7" # –£–∫–∞–∂–∏—Ç–µ –∑–¥–µ—Å—å –∞–∫—Ç—É–∞–ª—å–Ω—É—é —Å—Ç–∞–±–∏–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é –∫–∞–∫ fallback
        else
            log "   –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—Ä—Å–∏—é nvm: $LATEST_NVM_TAG"
        fi

        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ nvm. –î–æ–±–∞–≤–ª—è–µ–º PROFILE=/dev/null —á—Ç–æ–±—ã nvm –Ω–µ –ø—ã—Ç–∞–ª—Å—è –∏–∑–º–µ–Ω–∏—Ç—å .bashrc –∏ —Ç.–ø.
        # –ú—ã —Å–∞–º–∏ –∑–∞–≥—Ä—É–∂–∞–µ–º nvm.sh
        # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è NVM_DIR —É–∂–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞, –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å–æ–∑–¥–∞–Ω–∞.
        if ! curl -o- "https://raw.githubusercontent.com/nvm-sh/nvm/${LATEST_NVM_TAG}/install.sh" | PROFILE=/dev/null bash; then
            log "${RED}   ‚úó –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ nvm${NC}"
            # –ú–æ–∂–Ω–æ —Ç–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ $NVM_DIR, –µ—Å–ª–∏ —Ç–∞–º –ø–æ—è–≤–∏–ª–∏—Å—å –∫–∞–∫–∏–µ-—Ç–æ –ª–æ–≥–∏ –æ—Ç nvm
            exit 1 # –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞, –≤—ã—Ö–æ–¥–∏–º
        fi

        # –ó–∞–≥—Ä—É–∂–∞–µ–º nvm –≤ —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é –æ–±–æ–ª–æ—á–∫–∏ –ü–û–°–õ–ï —É—Å—Ç–∞–Ω–æ–≤–∫–∏
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –ø–µ—Ä–µ–¥ sourcing'–æ–º
        if [ -s "$NVM_DIR/nvm.sh" ]; then
            . "$NVM_DIR/nvm.sh"
            log "${GREEN}   ‚úì nvm —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∑–∞–≥—Ä—É–∂–µ–Ω${NC}"
        else
            log "${RED}   ‚úó –§–∞–π–ª $NVM_DIR/nvm.sh –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ nvm.${NC}"
            exit 1
        fi
    else
        log "${GREEN}   ‚úì nvm —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∑–∞–≥—Ä—É–∂–µ–Ω${NC}"
    fi

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ nvm —Ç–µ–ø–µ—Ä—å —Ç–æ—á–Ω–æ –¥–æ—Å—Ç—É–ø–µ–Ω
    if ! command -v nvm &> /dev/null; then
        log "${RED}   ‚úó FATAL: –ö–æ–º–∞–Ω–¥–∞ nvm –≤—Å–µ –µ—â–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏/–∑–∞–≥—Ä—É–∑–∫–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à ~/.bashrc (–∏–ª–∏ ~/.zshrc –∏ —Ç.–¥.) –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª, –∑–∞—Ç–µ–º —Å–∫—Ä–∏–ø—Ç.${NC}"
        log "${RED}   ‚úó –í–æ–∑–º–æ–∂–Ω–æ, –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –≤—Ä—É—á–Ω—É—é –¥–æ–±–∞–≤–∏—Ç—å –≤ –≤–∞—à ~/.bashrc (–∏–ª–∏ –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–π):${NC}"
        log "${RED}   export NVM_DIR=\"\$HOME/.nvm\"${NC}"
        log "${RED}   [ -s \"\$NVM_DIR/nvm.sh\" ] && \\. \"\$NVM_DIR/nvm.sh\" # This loads nvm${NC}"
        log "${RED}   [ -s \"\$NVM_DIR/bash_completion\" ] && \\. \"\$NVM_DIR/bash_completion\"  # This loads nvm bash_completion${NC}"
        exit 1
    fi

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js –≤–µ—Ä—Å–∏–π
    local node_versions=(16 21)
    for version in "${node_versions[@]}"; do
        if nvm ls "$version" &>/dev/null; then
            log "${GREEN}   ‚úì Node.js $version —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
        else
            log "${YELLOW}   ‚Üì –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Node.js $version...${NC}"
            if ! nvm install "$version"; then
                log "${RED}   ‚úó –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Node.js $version${NC}"
                continue
            fi
            log "${GREEN}   ‚úì Node.js $version —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
        fi

        log "${YELLOW}   ‚ö° –ü—Ä–æ–≤–µ—Ä—è–µ–º @antfu/ni –¥–ª—è Node.js $version...${NC}"
        if ! nvm use "$version"; then
            log "${RED}   ‚úó –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ Node.js $version${NC}"
            continue
        fi

        if npm list -g --depth=0 @antfu/ni &>/dev/null; then
            log "${GREEN}   ‚úì @antfu/ni —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è Node.js $version${NC}"
        else
            log "${YELLOW}   ‚Üì –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º @antfu/ni –¥–ª—è Node.js $version...${NC}"
            if ! npm i -g @antfu/ni; then
                log "${RED}   ‚úó –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ @antfu/ni –¥–ª—è Node.js $version${NC}"
            else
                log "${GREEN}   ‚úì @antfu/ni —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è Node.js $version${NC}"
            fi
        fi
    done

    if [ ${#node_versions[@]} -gt 0 ]; then
        latest_node_in_list="${node_versions[-1]}"
        if nvm alias default "$latest_node_in_list"; then
            log "${GREEN}   ‚úì Node.js $latest_node_in_list —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–∞–∫ –≤–µ—Ä—Å–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.${NC}"
        else
            log "${YELLOW}   ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Node.js $latest_node_in_list –∫–∞–∫ –≤–µ—Ä—Å–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.${NC}"
        fi
    fi

    show_progress
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ bun –∏ ni —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π
install_bun() {
    clear_status
    log "${YELLOW}üêá –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º bun...${NC}"

    if ! command -v bun &> /dev/null; then
        log "${YELLOW}   ‚Üì –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º bun...${NC}"
        if ! curl -fsSL https://bun.sh/install | bash; then
            log "${RED}   ‚úó –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ bun${NC}"
            exit 1
        fi
        export PATH="$HOME/.bun/bin:$PATH"
        log "${GREEN}   ‚úì bun —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
    else
        log "${GREEN}   ‚úì bun —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
    fi

    log "${YELLOW}   üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º @antfu/ni –≤ bun...${NC}"
    if bun pm ls | grep -q "@antfu/ni"; then
        log "${GREEN}   ‚úì @antfu/ni —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ bun${NC}"
    else
        log "${YELLOW}   ‚Üì –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º @antfu/ni —á–µ—Ä–µ–∑ bun...${NC}"
        if ! bun i -g @antfu/ni; then
            log "${RED}   ‚úó –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ @antfu/ni —á–µ—Ä–µ–∑ bun${NC}"
        else
            log "${GREEN}   ‚úì @antfu/ni —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ bun${NC}"
        fi
    fi

    show_progress
}

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥–æ–≤ Hyprland —Å –±—ç–∫–∞–ø–æ–º
copy_hypr_configs() {
    clear_status
    log "${YELLOW}üìÇ –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥–∏ Hyprland...${NC}"
    HYPR_DIR="$HOME/.config/hypr"
    BACKUP_DIR="$HYPR_DIR/backup_$(date +%Y%m%d_%H%M%S)"

    mkdir -p "$HYPR_DIR"
    mkdir -p "$BACKUP_DIR"

    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Å –±—ç–∫–∞–ø–æ–º
    copy_with_backup() {
        local file="$1"
        if [ -f "$file" ]; then
            if [ -f "$HYPR_DIR/$file" ]; then
                if ! cp "$HYPR_DIR/$file" "$BACKUP_DIR/"; then
                    log "${RED}   ‚úó –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±—ç–∫–∞–ø–∞ $file${NC}"
                    return
                fi
                log "${GREEN}   üîÑ –°–æ–∑–¥–∞–Ω –±—ç–∫–∞–ø $file${NC}"
            fi
            if ! cp -f "$file" "$HYPR_DIR/"; then
                log "${RED}   ‚úó –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è $file${NC}"
                return
            fi
            log "${GREEN}   ‚úì $file —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω${NC}"
        else
            log "${RED}   ‚ö†Ô∏è –§–∞–π–ª $file –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
        fi
    }

    copy_with_backup "keybindings.conf"
    copy_with_backup "windowrules.conf"

    show_progress
}

# –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å
main() {
    log "${BLUE}üê± –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã –∫–æ—Ç–∏–∫-–∏–Ω—Å—Ç–∞–ª–ª—è—Ç–æ—Ä–∞ üê±${NC}"
    log "–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Ñ–∞–π–ª: $LOG_FILE"

    check_yay
    install_packages
    install_nvm
    install_bun
    copy_hypr_configs

    clear_status
    log "\n${GREEN}üéâ –í—Å—ë –≥–æ—Ç–æ–≤–æ! Hyprland –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø–æ–¥ –≤–∞—à–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è.${NC}"
    log "${BLUE}üê± –°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ—Ç–∏–∫-–∏–Ω—Å—Ç–∞–ª–ª—è—Ç–æ—Ä–∞! =^..^=${NC}"
    log "–ü–æ–ª–Ω—ã–π –ª–æ–≥ —É—Å—Ç–∞–Ω–æ–≤–∫–∏: $LOG_FILE"

    # –í—ã–≤–æ–¥–∏–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å
    echo -e "\n${GREEN}üéâ –í—Å—ë –≥–æ—Ç–æ–≤–æ! Hyprland –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø–æ–¥ –≤–∞—à–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è.${NC}" >&3
    echo -e "${BLUE}üê± –°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ—Ç–∏–∫-–∏–Ω—Å—Ç–∞–ª–ª—è—Ç–æ—Ä–∞! =^..^=${NC}" >&3
    echo -e "–ü–æ–ª–Ω—ã–π –ª–æ–≥ —É—Å—Ç–∞–Ω–æ–≤–∫–∏: $LOG_FILE" >&3
}

main "$@"
